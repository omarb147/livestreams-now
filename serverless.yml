service: scrapper-lambda

custom:
  userStage: ${env:STACK_NAME}
  defaultStage: "dev"

provider:
  name: aws
  region: eu-west-2
  stage: ${opt:stage, self:custom.userStage, self:custom.defaultStage}
  runtime: nodejs10.x
  environment:
    NODE_PATH: "./:/opt/node_modules"

plugins:
  - serverless-offline
  - serverless-dotenv-plugin

layers:
  chromeModule:
    path: lambda-layers/chrome-layer
    description: "chrome browser module for lambdas"
    compatibleRuntimes:
      - nodejs10.x
    package:
      include:
        - node_modules/**
  commonModule:
    path: lambda-layers/common-module
    description: "contains all common libraries and middleware for lambdas"
    compatibleRuntimes:
      - nodejs10.x
    package:
      include:
        - node_modules/**

package:
  exclude:
    - node_modules/puppeteer/.local-chromium/**
    - lambda-layers/**

functions:
  get-livestreams-function:
    memorySize: 2536
    timeout: 30
    environment:
      DEBUG: 0
    handler: lambdas/get-livestreams.handler
    events:
      - http:
          path: /get-livestreams
          method: get
    layers:
      - { Ref: CommonModuleLambdaLayer }
  scraper-function:
    memorySize: 2536
    timeout: 30
    environment:
      DEBUG: 0
    handler: lambdas/scraper-function.handler
    events:
      - http:
          path: /scrape-data
          method: get
          cors: true
    layers:
      - { Ref: CommonModuleLambdaLayer }
      - { Ref: ChromeModuleLambdaLayer }
